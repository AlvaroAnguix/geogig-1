// automatically generated by the FlatBuffers compiler, do not modify

package org.locationtech.geogig.flatbuffers.generated;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

@SuppressWarnings("unused")
public final class Tag extends Table {
  public static Tag getRootAsTag(ByteBuffer _bb) { return getRootAsTag(_bb, new Tag()); }
  public static Tag getRootAsTag(ByteBuffer _bb, Tag obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Tag __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SHA commitId() { return commitId(new SHA()); }
  public SHA commitId(SHA obj) { int o = __offset(4); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public String name() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String message() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer messageAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer messageInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public Person tagger() { return tagger(new Person()); }
  public Person tagger(Person obj) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static void startTag(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addCommitId(FlatBufferBuilder builder, int commitIdOffset) { builder.addStruct(0, commitIdOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(1, nameOffset, 0); }
  public static void addMessage(FlatBufferBuilder builder, int messageOffset) { builder.addOffset(2, messageOffset, 0); }
  public static void addTagger(FlatBufferBuilder builder, int taggerOffset) { builder.addOffset(3, taggerOffset, 0); }
  public static int endTag(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 4);  // commit_id
    builder.required(o, 6);  // name
    builder.required(o, 8);  // message
    builder.required(o, 10);  // tagger
    return o;
  }
}

